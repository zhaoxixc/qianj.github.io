{"posts":[{"title":"IC环境的汇总","text":"找不到.so库文件如出现 1/usr/bin/ld ***.so *（或者其他） needed by 路径 not found ，后面可能会跟着 (try using -rpath or -rpath-link) 大概率是环境变量LD_LIBRARY_PATH中的没有包含此.so的路径。通过find查找该.so文件的路径 1find &lt;dir&gt; -name &quot;*.so&quot; 将.so的路径加到LD_LIBRARY_PATH环境变量中 1$ setenv LD_LIBRARY_PATH /a/b/c/:$LD_LIBRARY_PATH 常用的一些软件包1234567891011121314151617$ yum install redhat-lsb-core.i686$ yum install libxml2 glibc-devel gcc-c++ gcc libmng libGLU glibc-devel.i686 libXp libXt libXtst zlib ncurses-libs libXScrnSaver$ yum install libXp.i686 libXt.i686 libXtst.i686 zlib.i686 elfutils-libelf.i686 ncurses-libs.i686$ yum install htop ctags tree iftop ksh cscope vim-X11 tmux git git-svn subversion tcsh tcl tcl-devel filezilla ftp konsole ncdu$ yum groupinstall -y &quot;Development tools&quot;$ yum groupinstall -y &quot;Additional Development&quot;$ yum install meld lsb-core-noarch cgdb python3 python3-pip pdb python2-pip xorg-x11-fonts* readline.i686 ntpdate ntp$ yum-complete-transaction$ ln -s /lib/libreadline.so.6 /lib/libreadline.so.5$ ln -s /lib/libhistory.so.6 /lib/libhistory.so.5$ ln -s /usr/lib64/libreadline.so /usr/lib64/libreadline.so.5$ ln -s /usr/lib64/libhistory.so /usr/lib64/libhistory.so.5$ yum -y install openldap-clients nss-pam-ldapd nscd$ yum install libpng12-devel.x86_64 xterm $ yum install ld-linux.so.2 libstdc++.so.6 libXext.so.6 expat.i686 centos6.x gnome挂死表现为新建vnc黑屏 123456$ top # 查看到dbus进程CPU负载高# 查看.so依赖关系，均正常$ which dbus-launch$ ldd /usr/bin/dbus-launch$ which dbus-daemon$ ldd /bin/dbus-daemon 增大ulimit参数 12345678ulimit -SHn 65535ulimit -u 4134117ulimit -n 65535ulimit -d unlimitedulimit -m unlimitedulimit -s unlimitedulimit -t unlimitedulimit -v unlimited 杀死离职人员pid 123ps -ef | grep dbus-daemonkill -9 PIDNUM ssh登录慢/限制/免密ssh登录慢考虑禁用sshd配置中的DNS 1234$ vim /etc/ssh/sshd_configuseDNS no$ systemctl restart sshd 存在私有服务资源情况时，可以指定用户或组来登录运算服务器 123456$ vim /etc/ssh/sshd_config# 禁止DenyUsers zhangsan lisi wangwuDenyGroups Z10# 允许AllowUsers qianj admin root 从登录服务器免密登录运算服务器 123$ ssh-keygen # 生成ssh密钥对$ ssh-copy-id wds081 # 拷贝密钥信息到任意一台运算服务器# 注意！！！所有运算服务器都是共用的一个home目录，所以copy只需要做一次，不需要再copy到其他运算服务器了！！！ 个性化设置（.cshrc）提示符格式大部分初始状态为username@hostname:~&gt; 1234567$ vim ~/.cshrcset prompt = '%m@%n-%/:&gt;'# 显示效果为hostname@username-/home/username:&gt;$ vim ~/.cshrcset prompt = '%n@%m:%c&gt;' # 初始默认 文件和文件夹显示颜色自定义在现实文件或者文件夹列表的时候各自不同的类型与结尾使用不同的颜色 12345$ discolors –p # 查看# 以下示例tar/tgz/gz结尾的压缩包显示为红色$ vim ~/.cshrcset LS_COLORS ‘.tar=31:.tgz=31:.gz=31’ 设置alias12345$ vim ~/.cshrcalias .. &quot;cd ..&quot;alias cd 'chdir \\!*; ls' # 改变目录的同时会列出改变后的目录下的内容alias qenv 'env | grep \\!*' # 输入 qenv HOME的时候会列出环境变量中包含HOME的项alias home ‘cd ~/’ # 使用home命令直接返回个人家目录 如果遇到当前目录的程序或者脚本在具有权限的前提下，但是无法执行时(出现command not found)，可以在cshrc文件中加入 1set path = ($path ./) 最后还需要source一下.cshrc文件，使其生效 1$ source ~/.cshrc .vimrc配置12345678$ vim ~/.vimrcset backspace=2 # 可以直接解决退格键的问题（还可以设置indent,eol,start）syntax on # 代码高亮显示set hlsearch # 搜索高亮设置set autoread # 文件修改后自动载入set nu # 显示行号set background=dark # 背景使用黑色set ts=4 # 设置一个tab等于4个空格 内网环境pip无法安装python库在外网环境pip download下载好对应的库及其依赖 1pip download -r requirements.txt --platform linux_x86_64 --python-version 38 --abi cp38 --implementation cp --only-binary=:all: 如果外部环境和内部环境的平台及python版本相同，则可以使用 1pip download -r requirements.txt 然后将安装包传入内部环境进行安装 1pip install ***.whl 如果python库附带一些依赖包，而依赖包的版本有可能存在冲突，那么install的时候可能采用如下指令 1pip install --no-index --find-links=&lt;DIR&gt; ***.whl xfce123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114# 1、安装软件yum install epel-release -yyum groupinstall &quot;Server with GUI&quot; -yyum groupinstall &quot;Xfce&quot; -yyum grouplist hiddenyum groupinstall &quot;Fonts&quot; # 安装字体包fc-list :lang=zh-cn # 可以看到当前已经安装的中文字体yum groupinstall &quot;Compatibility Libraries&quot;yum install libX11.i686 -y#2、配置默认targetsystemctl set-default graphical.targetsystemctl get-defaultsystemctl isolate graphical.target#3、禁用firewalld和selinux#4、配置lightdmsystemctl stop gdmsystemctl disable gdm$ vi /etc/lightdm/lightdm.conf[XDMCPServer]enabled=trueport=177$ systemctl enable lightdm$ systemctl start lightdm#5、删除无关的包gnome-packagekit-3.28.0mate-screensaver-1.16.1-1.el7.x86_64 gnome-screensaver-3.6.1-20.el7.x86_64gnome-user-docs-3.28.2-1.el7.noarch…$ yum remove gnome-packagekit-3.28.0$ yum remove gnome-user-docs$ yum remove gnome-screensaver#6、给gnome桌面增加右键 Terminal 菜单（xfce 默认存在）yum install nautilus-open-terminal#7、配置latency-performance，保障系统是低延迟模式$ yum update$ yum install tuned$ systemctl start tuned $ systemctl enable tuned$ tuned-adm profile latency-performance$ tuned-adm active# 验证 latency-performance 已经生效#8、配置dbus$ vim /etc/security/limits.conf# 在文件末尾添加* soft nofile 65535* hard nofile 65535$ cd /etc/security/limits.d/$ cat 20-nproc.conf * soft nproc 65535* soft nofile 65535root soft nproc unlimited# 否则会出现 dbus 为 100%的情况，但是 20-nproc.conf 这里的*，如果配置为 65535 也会有其他影响，可能某个用户，开启太多经常，导致服务器异常。默认是 4096# 查看是否生效$ ps aux|grep gnome-terminal # 查看到对应的PIDNUM$ cd /proc/15758 # 进入该PIDNUM$ cat limits Limit Soft Limit Hard Limit Units Max processes 4096 4096 processes Max open files 65535 65535 files#9、禁止 lightdm 在登录的时候显示所有 User，默认是允许的$ vi /etc/lightdm/lightdm.conf[Seat:*]#type=localgreeter-hide-users=true#10、配置右键 Terminal 打开后的默认目录$ vi /etc/xdg/Thunar/uca.xml&lt;command&gt;exo-open --working-directory %d --launch TerminalEmulator&lt;/command&gt; # 这里修改默认 %f 为 %d#11、配置默认的 terminal 为 Gnome-terminal$ vi /etc/xdg/xfce4/helpers.rcWebBrowser=chromium-browserMailReader=thunderbirdTerminalEmulator=gnome-terminalFileManager=Thunar#12、Xfce policykit agent 错误$ cd /etc/xdg/autostart/$ mv /etc/xdg/autostart/xfce-polkit.desktop xfce-polkit.desktop.bak# 或者尝试yum update#13、设置 XFCE 作为主要桌面$ cd /usr/share/xsessions$ mkdir bak$ mv gnome* bak/$ mv mate* bak/#14、Group icons on Panel显示设置（根据个人喜好）开了多个Terminal，每个都在panel上，不方便。可以放一起，通过下拉菜单来选择。步骤如下可以右击Panel处，依次选择Panel--&gt;Panel Prferences--&gt;Items--&gt;Windows Bottons双击，或者点击扳手图标，在Behaviour下修改Window grouping为Always即重叠；选择Never则平铺不重叠。或者修改xfce4-panel.xml文件 &lt;property name=&quot;plugins&quot; type=&quot;empty&quot;&gt; &lt;property name=&quot;plugin-1&quot; type=&quot;string&quot; value=&quot;applicationsmenu&quot;/&gt; &lt;property name=&quot;plugin-2&quot; type=&quot;string&quot; value=&quot;actions&quot;/&gt; &lt;property name=&quot;plugin-3&quot; type=&quot;string&quot; value=&quot;tasklist&quot;&gt; &lt;property name=&quot;grouping&quot; type=&quot;uint&quot; value=&quot;1&quot;/&gt; &lt;/property&gt; &lt;property name=&quot;plugin-15&quot; type=&quot;string&quot; value=&quot;separator&quot;&gt; 本文部分配置收集于网络 课程中心Qianj.51CTO","link":"/clqtboe0k000040yj6czgbfpq.html"},{"title":"linux下解压rar、zip、7z、tar包","text":"rar包解压rarlinux-xxx.tar.gz包后进入目录make; make install使用rar x filename进行解包 zip包unzip -o xxx.zip -d xxx/ 将xxx.zip解压到当前xxx目录下 7z包yum install p7zip p7zip-plugins.x86_64 -y使用7z x xxx.7z进行解包 tar包tar xf xxx.tartar zxf xxx.tar.gztar zxf xxx.tgz如果遇到多个分包，如xxx.tar.gz00，xxx.tar.gz01，xxx.tar.gz02……先使用cat xxx.tar.gz* &gt;&gt; xxx.tar.gz然后使用tar -zxf xxx.tar.gz解包 课程中心Qianj.51CTO","link":"/clqw3t3590000nsyj7zd73om4.html"},{"title":"License server system does not support this version of this feature","text":"背景说明verdi版本T-2022.06scl版本2022.12 异常处理第一次启动verdi软件时，提示如下在Synopsys.src文件添加如下信息 1INCREMENT VERDI-ULTRA snpslmd 2019.2019 31-dec-2024 99 VENDOR_STRING=^1+S&amp;PID=214a307a&amp; SUPERSEDE ISSUED=01-apr-2004 ck=51 SN=RK:2671-0:167603:0 START=01-apr-2004 AUTH={ snpslmd=(LK=0) } 进行和谐后，第二次启动verdi软件，提示如下15:35:45 (snpslmd) DENIED: &quot;Verdi&quot; root@wds069 [wds069root34113996] &quot;v2020.06&quot;(License server system does not support this version of this feature. (-25,334))15:35:45 (snpslmd) DENIED: &quot;VERDI-ULTRA&quot; root@wds069 [wds069root34113996] &quot;v2020.06&quot;(License server system does not support this version of this feature. (-25,334))修改刚才在Synopsys.src中添加的信息，修改为如下 1INCREMENT VERDI-ULTRA snpslmd 2022.2019 31-dec-2024 99 VENDOR_STRING=^1+S&amp;PID=214a307a&amp; SUPERSEDE ISSUED=01-apr-2004 ck=51 SN=RK:2671-0:167603:0 START=01-apr-2004 AUTH={ snpslmd=(LK=0) } 重新和谐，第三次启动verdi软件，OK了 课程中心Qianj.51CTO","link":"/clqw2o9ck0000a8yjfe7s8nnb.html"},{"title":"linux下查看PDF","text":"yum install evinceevince qianj.pdffirefox qianj.pdf 课程中心Qianj.51CTO","link":"/clqvzt7sf0000fcyj9glu8l2p.html"},{"title":"一起EDA工具安装在NFS引发的错案","text":"系统环境变量1234567export CDS_LIC_FILE=5284@172.11.0.91export INCISIVDIR=/data/eda/cadence/INCISIV152111export VRST_HOME=$INCISIVDIRexport LD_LIBRARY_PATH=$INCISIVDIR/tools.lnx86/lib:$LD_LIBRARY_PATHexport SPECMAN_HOME=$INCISIVDIR/components/snexport SPECMAN_DIR=$SPECMAN_HOME/export PATH=$INCISIVDIR/bin:$INCISIVDIR/tools.lnx86/bin:$INCISIVDIR/tools.lnx86/dfII/bin:$PATH 执行simvision 报错如下1234simvision: 15.20-p001: (c) Copyright 1995-2016 Cadence Design Systems, Inc.Application initialization failed: Can't find a usable init.tcl in the following directories: /vobs/dvgui/src/tcltk/instdir.build/lib/tcl8.4 /data/eda/cadence/INCISIV152111/tools.lnx86/simvision/lib/tcl8.4 /data/eda/cadence/INCISIV152111/tools.lnx86/lib/tcl8.4 /data/eda/cadence/INCISIV152111/tools.lnx86/simvision/library /data/eda/cadence/INCISIV152111/tools.lnx86/library /data/eda/cadence/INCISIV152111/tools.lnx86/tcl8.4.19/library /data/eda/cadence/INCISIV152111/tcl8.4.19/library /vobs/dvgui/src/tcltk/instdir.build/lib/tcl8.4 如果将此文件夹复制到本地/opt目录下，则不会报错 解决方案有3个方法可以处理这个问题1、将simvision的位置定义到 bin/64bit 下2、simvision -64BIT3、setenv CDS_AUTO_64BIT ALL 原因此问题在于32位软件inode的问题。现在的存储容量都很大，使用inode64，32位的软件无法查找到索引数过大的文件。 课程中心Qianj.51CTO","link":"/clqvzcck00000s4yj225c1o6c.html"},{"title":"挂载的NFS目录经常‘卡’","text":"环境centos 7.x 问题通过nfsstat -m查看发现NFS使用的vers=4.1版本，通过dmesg | grep -i nfs也可以看到很多如下信息nfs: server 192.168.11.62 not responding,still tryingNFS: nfs4_reclaim_open_state:Lock reclaim failed! 解决方案yum update到centos7.9重启系统修改/etc/fstab中挂载的NFS卷，使用vers=4.0版本 1192.168.11.xx:/proj /proj nfs defaults,vers=4.0 0 0 课程中心Qianj.51CTO","link":"/clqvwstqr000008yjb2cj0ohb.html"},{"title":"artisan的sparc架构环境","text":"解决方案在centos7里使用qemu创建solaris8 qemu-system-sparc -M SS-5 -m 256 -drive file=/solaris/sparc.qcow2,bus=0,unit=0,media=disk -net nic -net tap -display vnc=:0 课程中心Qianj.51CTO","link":"/clqvt01ot0000psyjc07zfc5m.html"},{"title":"module工具的安装和使用","text":"安装module官网 Module 工具是基于 TCL（8.4 以上版本）工具的，目前 module 工具为 4.4.1，基于 tcl8.5 或更高版本，而 module3.X 版本则基于 tcl8.4 版本，Redhat6 系列 yum 安装的 tcl 为 8.5 版本。 Module 工具可以使用二进制编译安装，也可以使用 yum/apt 快速安装， Redhat/Centos 使用：yum install environment-modules； ubuntu 等使用：apt-get install environment-modules 安装。 编译安装可以每台运算服务器单独安装，也可以安装到共享路径下 12345678910# mc在用yum install tcl tcl-develcd /eda/share/conf/tar xf modules-3.2.10.tar.bz2cd modules-3.2.10./configure --prefix=/usr/sharemake &amp;&amp; make installln -s /usr/share/Modules/3.2.10/init/csh /etc/profile.d/modules.cshln -s /usr/share/Modules/3.2.10/bin/modulecmd /usr/bin/modulecmd 或者 1234567891011121314151617181920212223242526# 李艳青cd modules-3.2.10./configure --prefix=/usr/tools/Modules --modulefilesdir=/usr/tools/Modules/modulefiles --enable-dotmodulespathmake; make installll /usr/tools/Modules# 可以看到一些生成的文件和目录，如bin/init/libexec/modulefiles/share目录# 接着安装后的配置# 要保证相关设置在系统启动的时候都能被正确配置，这些设置文件都放在 init 路径下# 将 profile.sh/profile.csh 都连接到 /etc/profile.d 下面，注意源文件要写绝对路径ln -s /usr/tools/Modules/init/profile.csh /etc/profile.d/modules.cshln -s /usr/tools/Modules/init/profile.sh /etc/profile.d/modules.sh# 配置完成后，可切换到普通用户下验证module avil# 简单环境配置。进入到modulefiles目录下，新增配置文件cd /usr/tools/Modules/modulefiilesmkdir cadencecd cadencecp ../modules ic618vim ic618 # 在末尾添加setenv ICV ic618# 编辑完成后立即生效，验证module avilmodule load cadence ic618echo $ICV # 此时返回ic618说明OK 初始化安装 module 工具后，你会发现它并不是一个可执行的二进制文件，你需要对 module 工具进行一次初始化。 在 /usr/share/modules/init (注意此处，可能是 module 也可能是 modules) 内部你可以找到针对各个脚本的二进制初始化文件，找到你当前的脚本，source 这个二进制文件，例如你是 bash 脚本，source /usr/share/modules/init/bash 之后，你就可以使用 module 工具了。 常用命令和使用1234567module avail # 显示可以使用的模块module load/add # 加载模块module unload/rm # 卸载模块module list # 显示已经加载的模块 Module 工具依托于 MODULEPATH 这个环境变量来查找配置信息目录，也就是说你在设置好目录结构，配置好环境变量后，只需要设置这一个 module 的环境变量，那么 module 工具就会自动去查找这个路径下的所有配置信息。 [qianj@wds080 cadence]$ env | grep -i modulepath MODULEPATH=/usr/share/Modules/versions:/usr/share/Modules/$MODULE_VERSION/modulefiles:/usr/share/Modules/modulefiles:/eda/env/modules/tools:/eda/env/modules/proj:/eda/env/modules/library [qianj@wds080 cadence]$ modulefile的写法通常我们会将同一类的软件、库等内容放在同一个目录，假设目录名为 /soft，在 soft 目录下包含 gcc、python、java 等常用工具，而 gcc 又包含 4.8.4、4.9.3、4.9.7 三个版本，python 包含 2.7、3.6 两个版本、java 包含 1.6、1.7、1.8 三个版本，那么它的目录结构如下： 那么 soft 目录即为 MODULEPATH 变量设置的目录，最后面的版本文件为 modulefile，我们只需要安装这种目录格式创建目录和文件即可。 在编写 modulefile 文件时的几个注意事项，例如我要编写 4.8.4 这个文件，注意，这个文件时 gcc4.8.4 的环境变量配置文件，不是 gcc 的存放路径。它必须是一个文件、而不是一个文件夹。 在文件开头一定要写上 #%Module1.0 这个是识别这个文件为 modulefile 的，没有他这个文件不会被识别 prepend-path 要修改的环境变量路径 这个命令会把工具路径添加到环境变量的前面 setenv 环境变量名 值 这个命令会把你需要的环境变量配置到系统中 请看以下示例：gcc/4.8.4 （这个工具我安装在 /software/gcc/4.8.4 / 下） #%Module1.0 setenv GCC_HOME /software/gcc/4.8.4/ prepend-path PATH /software/gcc/4.8.4/bin 这就是一个 gcc4.8.4 的环境变量配置，我们将所有的环境变量配置好之后，使用 modue avail 命令即可查看到相应信息，如下所示： 使用 module load 载入相应的工具和版本 使用 module list 查看载入的工具和版本 使用 module show 工具 / 版本 来查看相应配置信息（非常用命令） 这时候我们可以 echo $PATH 来查看是否将 gcc 路径添加到了 PATH 路径中 使用 echo $GCC_HOME 查看是否已经设置好此环境变量 这时候代表你的目录设置、modulefile 都没有问题，只要软件 / 工具等存放的路径没有问题，那么即可正常使用。 多路径MODULEPATH 可以设置为多个路径，例如我设置 /soft、/soft1、/soft2 都是工具、软件等脚本的存放路径，那么我就可以设置 MODULEPATH 为多个路径，路径之间用冒号分割。 这时候我们 module avail 来查看信息，即可看到如下 注意：千万不要出现软件名和版本一样的 modulefile 默认版本在 module avail 中，我们可以设置默认版本，例如我想将 gcc 4.9.3 设置为默认版本，当我 module load gcc 的时候，就直接载入 4.9.3 版本，我们可以使用.version 文件来控制这个默认信息。 在 modulefile 同级目录下创建.version 文件，看清楚，前面有个点，写法如下 #%Module1.0 set ModulesVersion “4.9.3 使用 module avail 查看信息 在 4.9.3 版本后面多了一个（default） 然后使用module rm gcc后重新module load gcc，在用module list查看 注意：由于 module 只能载入同类工具、库的某一个版本，使用module rm或者module unload删除的时候就直接说明删除的工具、库就可以了，后面不需要带版本号。 全局使用由于 module 的特性问题，如果在公司内使用，你可能需要所有的使用人员设置一个统一的初始脚本，无论是 bash 还是 csh，通常我们建议建立一个用户可读的统一脚本文件，然后 link 到每个使用人员的家目录下的初始脚本。 例如我们建立为 csh 建立一个统一的 csh.cshrc 文件。Link 给 qianj ln -s csh.cshrc /home/qianj/.cshrc 我们还可以在初始脚本中加入 source ./cshrc.own 那么用户只需要在家目录创建一个 cshrc.own 的文件所谓个性化脚本文件即可。 本文来源于网络，结合李艳青、张长瑞以及qianj生产环境中的使用 课程中心Qianj.51CTO","link":"/clqvrhwvo0000akyj18pu3agp.html"},{"title":"2023.12.31","text":"竹子是一种草，但比很多树长得都高 靠想象打开未来一扇扇大门，靠理性选择其中正确的一扇 最聪明的人，是最不愿意浪费时间的人 世界最高峰珠穆朗玛峰平均每年仍会增高1厘米 虽然北极表面上尽是冰雪，深处却有丰富的金矿、钻石和铜铁 取得成就时坚持不懈，比遭遇失败时顽强不屈更重要 将小事做到极致，是做大事业的第一步 大脑处理新信息时会觉得时间变慢，探索让我们感觉活得更久 金星虽然是不发光的行星，但却比许多恒星还要明亮 人生必有风险，因此令人着迷 渴望飞翔的人不会甘心于爬行 如果你因为失去太阳而流泪，那你也将失去群星了 船停在港湾固然安全，但那不是造船的初衷 偏见是负担，它混淆过去，威胁未来，并使人无法掌握当下 不贵于无过，而贵于能改过 知而不行，只是未知 大脑只有身体的2重，却使用17%的能量思考着这个世界 人类大脑中的神经细胞数与银河系内的恒星数量相当 人跟树一样，越是向往高处的阳光，根就越要伸向黑暗的地底 无限的宽容必将导致宽容的消失 浅水是喧哗的，深水是沉默的 自我控制是最强者的本能 若能脱颖而出，何必苦苦融入 变化不一定能带来进化，但所有进化都始于变化 不经冬寒，不知春暖 过于爽快地承认失败，就可能发觉不了曾与正确非常接近 黑夜无论怎样悠长，白昼总会到来 今日之失，未必不为后日之得 若不知道要驶向哪个码头，那么任何风都不会是顺风 没有执行力的远见等同于空想 逆境使人自知 飞的最高的海鸥，能看得到最远的奇景 生活犹如骑单车，唯有前进才能保持平衡 成长与舒适无法并存 功不求戾，但求有恒 争取摘到月亮，因为即使你坠落也会落在群星之间 阳光越是强烈的地方，阴影就越是深邃 万物皆有裂痕，那是光照进来的地方 过分揣测别人的想法，就会失去自己的立场 没有被听见不是沉默的理由 天空灰暗到一定程度，星辰就会熠熠生辉 杨柳不随春色减，松柏唯有岁寒知 山谷的最低点正是山的起点 欲变世界，先变自己 种一棵树最好的时间永远是当下 凡是过去，皆为序幕 怕什么真理无穷，进一寸有一寸的欢喜 难度就是价值所在 光子从日核走到表面需要20万年，坚持日可贵的品质 少睡者次日会多摄入385卡路里，过劳肥由此而来 把时间用在思考上最能节省时间 课程中心Qianj.51CTO","link":"/clqtlv1od00007oyjhouv9ggc.html"},{"title":"chmod 700 禁用运算服务器的一些功能","text":"请根据实际情况酌情使用！ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#!/bin/bash#Server safe by Root#Create by Fasteda.cn#2022,03,12chmod 700 /bin/pingchmod 700 /bin/traceroutechmod 700 /bin/netstat chmod 700 /bin/mailchmod 700 /bin/mailxchmod 700 /bin/mountchmod 700 /sbin/service chmod 700 /sbin/ifconfigchmod 700 /sbin/arpchmod 700 /sbin/arpingchmod 700 /sbin/ipchmod 700 /sbin/lvmchmod 700 /sbin/runuser chmod 700 /sbin/route chmod 700 /usr/sbin/iotopchmod 700 /usr/sbin/lsof chmod 700 /usr/sbin/tcpdump chmod 700 /usr/sbin/sendmailchmod 700 /usr/sbin/sendmail.postfixchmod 700 /usr/bin/sarchmod 700 /usr/bin/sshchmod 700 /usr/bin/sudochmod 700 /usr/bin/lastchmod 700 /usr/bin/netchmod 700 /usr/bin/lastlog chmod 700 /usr/bin/xrdbchmod 700 /usr/bin/akregatorchmod 700 /usr/bin/kgetchmod 700 /usr/bin/curlchmod 700 /usr/bin/mailchmod 700 /usr/bin/mailxchmod 700 /usr/bin/wgetchmod 700 /usr/bin/rzchmod 700 /usr/bin/szchmod 700 /usr/bin/ftpchmod 700 /usr/bin/sftpchmod 700 /usr/bin/scpchmod 700 /usr/bin/traceroutechmod 700 /usr/bin/kmailchmod 700 /usr/bin/knodechmod 700 /usr/bin/konquerorchmod 700 /usr/bin/kopetechmod 700 /usr/bin/pppchmod 700 /usr/bin/kpppchmod 700 /usr/bin/krdcchmod 700 /usr/bin/krfbchmod 700 /usr/bin/remote-viewer chmod 700 /usr/bin/tn5250 chmod 700 /usr/bin/k3b chmod 700 /usr/bin/kmidchmod 700 /usr/bin/x3270chmod 700 /usr/bin/virt-manager chmod 700 /usr/bin/virt-install chmod 700 /usr/bin/virt-viewer 本文整理于网络 课程中心Qianj.51CTO","link":"/clqtboe1e000h40yjcyibbp0o.html"},{"title":"检查系统CPU&#x2F;MEM利用率","text":"12345678910111213141516171819$ pwd/home/qianj/tools/check_sysinfo$ cat use_check_cpu_mem.sh#!/bin/bashsrvs=&quot;wds045 wds046 wds047 wds049 wds081 wds082 wds083 wds084 wds085 wds086&quot;for srv in $srvsdo ssh $srv 'python3 /home/qianj/tools/check_cpu_mem.py'done $ cat check_cpu_mem.pyimport socketimport psutilnameinfo = socket.gethostname()cpuinfo = psutil.cpu_percent(interval=1)meminfo = psutil.virtual_memory().percentprint(&quot;{} ==&gt; CPU使用率：{} 内存使用率：{}&quot;.format(nameinfo,cpuinfo,meminfo)) 课程中心Qianj.51CTO","link":"/clqtboe1i000o40yj6y654on6.html"},{"title":"centos7.9作为运算服务器的一些优化","text":"内核参数优化提高文件描述符限制在/etc/security/limits.conf文件中增加以下行 12* hard nofile 65536* soft nofile 65536 提高进程数限制在/etc/security/limits.conf文件中增加以下行 12* hard nproc 65536* soft nproc 65536 禁用透明大页（Transparent Huge Pages）在/etc/default/grub文件中的GRUB_CMDLINE_LINUX行中增加以下参数 1transparent_hugepage=never 禁用NUMA（非统一内存访问）在/boot/grub2/grub.cfg文件中menuentry段中的内核启动参数中增加以下参数 1numa=off 调整内核参数在/etc/sysctl.conf文件中增加以下行 12fs.file-max = 1048576vm.max_map_count = 262144 网络参数优化增加文件句柄限制在/etc/security/limits.conf文件中增加以下行 12* hard memlock unlimited* soft memlock unlimited 调整TCP参数在/etc/sysctl.conf文件中增加以下行 123456net.ipv4.tcp_max_syn_backlog = 8192net.core.somaxconn = 8192net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_tw_buckets = 20000net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_fin_timeout = 15 资源管理优化禁用THP（Transparent Huge Pages）编辑/etc/rc.d/rc.local文件，在文件末尾添加以下行 12echo never &gt; /sys/kernel/mm/transparent_hugepage/defragecho never &gt; /sys/kernel/mm/transparent_hugepage/enabled 禁用IRQ负载平衡在/etc/default/grub文件中增加以下参数 1isolcpus=2-15 nohz_full=2-15 rcu_nocbs=2-15 禁用CPU频率调节机制在/etc/default/grub文件中增加以下参数 1intel_pstate=disable 关闭不必要的系统服务使用systemctl命令停止和禁用不必要的服务 生产环境已用1234567891011121314151617181920212223242526# 限制$ cat /etc/security/limits.d/22-iclab.conf @THU hard fsize 52428800 @THU soft fsize 52428800 @THU hard nofile 10000 @THU soft nofile 10000 @THU hard nproc 9000 @THU soft nproc 9000#禁用ipv6$ cat &lt;&lt;EOF &gt;&gt; /etc/sysctl.confnet.ipv6.conf.all.disable_ipv6 = 1net.ipv6.conf.default.disable_ipv6 = 1net.ipv6.conf.default.autoconf=0EOF$ sysctl ‐p# ssh$ sed -i 's/#X11DisplayOffset.*/X11DisplayOffset 200/g' /etc/ssh/sshd_config$ vi /etc/ssh/sshd_configPubkeyAuthentication yesPermitRootLogin yesAddressFamily inet$ systemctl restart sshd 脚本12345678910111213141516171819202122232425262728293031#!/bin/bash# 内核参数优化echo &quot;* hard nofile 65536&quot; &gt;&gt; /etc/security/limits.confecho &quot;* soft nofile 65536&quot; &gt;&gt; /etc/security/limits.confecho &quot;* hard nproc 65536&quot; &gt;&gt; /etc/security/limits.confecho &quot;* soft nproc 65536&quot; &gt;&gt; /etc/security/limits.confecho &quot;kernel.numa_balancing = 0&quot; &gt;&gt; /etc/sysctl.confecho &quot;fs.file-max = 1048576&quot; &gt;&gt; /etc/sysctl.confecho &quot;vm.max_map_count = 262144&quot; &gt;&gt; /etc/sysctl.conf# 网络参数优化echo &quot;* hard memlock unlimited&quot; &gt;&gt; /etc/security/limits.confecho &quot;* soft memlock unlimited&quot; &gt;&gt; /etc/security/limits.confecho &quot;net.ipv4.tcp_max_syn_backlog = 8192&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.core.somaxconn = 8192&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_syncookies = 1&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_max_tw_buckets = 20000&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_tw_reuse = 1&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_fin_timeout = 15&quot; &gt;&gt; /etc/sysctl.conf# 资源管理优化echo &quot;echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag&quot; &gt;&gt; /etc/rc.localecho &quot;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&quot; &gt;&gt; /etc/rc.localecho &quot;GRUB_CMDLINE_LINUX=\\&quot;transparent_hugepage=never\\&quot;&quot; &gt;&gt; /etc/default/grubgrub2-mkconfig -o /boot/grub2/grub.cfgecho &quot;GRUB_CMDLINE_LINUX=\\&quot;numa=off\\&quot;&quot; &gt;&gt; /etc/default/grubgrub2-mkconfig -o /boot/grub2/grub.cfgecho &quot;GRUB_CMDLINE_LINUX=\\&quot;isolcpus=2-15 nohz_full=2-15 rcu_nocbs=2-15\\&quot;&quot; &gt;&gt; /etc/default/grubgrub2-mkconfig -o /boot/grub2/grub.cfgecho &quot;GRUB_CMDLINE_LINUX=\\&quot;intel_pstate=disable\\&quot;&quot; &gt;&gt; /etc/default/grubgrub2-mkconfig -o /boot/grub2/grub.cfg# 重启系统以使优化生效reboot 此文章部分来源于网络 课程中心Qianj.51CTO","link":"/clqtboe0t000140yjel27albg.html"},{"title":"centos7自定义关机前执行脚本","text":"创建脚本1234567cat &gt; /opt/test.sh &lt;&lt; 'EOF'#!/bin/bashecho `date &quot;+%G-%m-%d %H-%M-%S&quot;` &gt;&gt; /opt/test.log EOFchmod +x /opt/test.sh 创建systemd服务12345678910111213141516cat &gt; /usr/lib/systemd/system/stopSrv.service &lt;&lt; EOF[Unit]Description=close services before reboot and shutdownDefaultDependencies=noBefore=shutdown.target reboot.target halt.target[Service]Type=oneshotExecStart=/opt/test.shRemainAfterExit=yes[Install]WantedBy=halt.target reboot.target shutdown.targetEOF 启动服务1234systemctl daemon-reloadsystemctl enable stopSrvsystemctl restart stopSrvsystemctl status stopSrv 验证1234567# 有效果rebootshutdown -r nowshutdown -h now# 无效果poweroff 此文章来源于网络 课程中心Qianj.51CTO","link":"/clqtboe10000440yj2q0u79hy.html"},{"title":"日观EDA软件部署","text":"1、给的MAC用于生成lic文件，使用的是wds082的MAC2、将三个压缩包解压后放到/eda/tools/rigoron/目录下3、设置环境变量 12$ setenvRIGORON_LICENSE_FILE 27027@192.168.11.82$ setenv RIGORON_DIR/eda/tools/rigoron/RigorCons0802 4、启动RigorCons软件 1$ /eda/tools/rigoron/RigorCons0802/bin/Taish 5、flow的启动进入到flow的软件包目录 123456789101112$ pwd/eda/tools/rigoron/flowx86muchuang20230802/flow# 启动服务端（端口号要和lic使用的不同）$ ./TAIFlow server -p27031starting TaiFlow...start success# 启动客户端$ ./TAIFlow clientstarting TaiFlow...start success 然后在软件的File中设置Host，左下角显示connected 课程中心Qianj.51CTO","link":"/clqtboe1g000j40yje5wi7i0j.html"},{"title":"python字符串格式化三种方式","text":"python字符串格式化三种方式 课程中心Qianj.51CTO","link":"/clqtboe13000640yj9w4o6bi2.html"},{"title":"install synopsys dve-addon","text":"服务器中已经有了同版本的VCS，但是安装dve工具的时候异常，如下图 测试老版本的VCS2016版本的VCS中包含了dve工具，可以使用dve工具直接启动。2019版本的VCS中包含dve命令，但是启动不了，需要单独安装dve工具才行。 安装dve-addon1$ /eda/tools/synopsys/installer/5.6/setup.sh -install_as_root 重点！！！路径要选择已经安装了的同版本的VCS路径 和谐123$ cd install_dir$ /eda/tools/synopsys/crack_tools/synopsys_checksum . -y$ /eda/tools/synopsys/crack_tools/pubkey_verify . -y 启动测试123$ module unload vcs$ module load vcs/P-2019.06-SP1-1$ dve 课程中心Qianj.51CTO","link":"/clqtboe11000540yj981fd3ig.html"},{"title":"保密室EDA","text":"说明部署单机EDA（vcs/verdi/syn）可module管理，也可写到~/.bashrc中 环境配置123$ vim /etc/profilesource /usr/share/Modules/3.2.10/init/bashexport MODULEPATH=&quot;$MODULEPATH:/eda/env/modules/tools&quot; 不用每次手动load工具 12345$ vim ~/.bashrcmodule load synopsysmodule load syn/K-2015.06-SP5module load vcs/P-2019.06-SP1-1module load verdi/P-2019.06-1 验证工具12verdidc_shell 课程中心Qianj.51CTO","link":"/clqtboe19000a40yjdy66cez3.html"}],"tags":[{"name":"ic&#x2F;eda","slug":"ic-eda","link":"/tags/ic-eda/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"note","slug":"note","link":"/tags/note/"},{"name":"解决问题","slug":"解决问题","link":"/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"},{"name":"linux下查看PDF","slug":"linux下查看PDF","link":"/tags/linux%E4%B8%8B%E6%9F%A5%E7%9C%8BPDF/"}],"categories":[{"name":"qianj-work","slug":"qianj-work","link":"/categories/qianj-work/"},{"name":"qianj-up","slug":"qianj-up","link":"/categories/qianj-up/"},{"name":"qianj-note","slug":"qianj-note","link":"/categories/qianj-note/"},{"name":"note","slug":"note","link":"/categories/note/"}],"pages":[]}